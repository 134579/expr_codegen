import re

import numpy as np
import pandas as pd
import talib as ta

from loguru import logger

# TODO: load data
df = pd.DataFrame()

def signed_power(x, y):
    return x.sign() * (x.abs() ** y)

def scale(x, scale=1):
    return x / x.sum() * scale

{% for key, value in funcs.items() %}
def {{ key }}(df: pd.DataFrame) -> pd.DataFrame:
{{ value }}
    return df
{% endfor %}

logger.info("start...")

{% for key, value in groupbys.items() %}
{{ value-}}
{% endfor %}

{% for row in exprs_dst %}
{{ row-}}
{% endfor %}
{% for key, value in exprs_src.items() %}
# {{ key }} = {{ value-}}
{% endfor %}

# drop intermediate columns
df = df.drop(columns=filter(lambda x: re.search(r'^x_\d+', x), df.columns))


logger.info('done')

# save
# df.to_parquet('output.parquet', compression='zstd')

print(df.tail(5))
