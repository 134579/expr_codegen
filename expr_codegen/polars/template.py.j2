# this code is auto generated by the expr_codegen
# https://github.com/wukan1986/expr_codegen

import re

import numpy as np
import polars as pl
import polars.selectors as cs

from loguru import logger

# TODO: load data
df = pl.DataFrame()


def expr_rank_pct(expr: pl.Expr) -> pl.Expr:
    """rank(pct=True)"""
    return expr.rank() / (expr.len() - expr.null_count())

{% for key, value in funcs.items() %}
def {{ key }}(df: pl.DataFrame) -> pl.DataFrame:
    df = df.with_columns(
        {{ value|join('\n') }}
    )
    return df
{% endfor %}

logger.info("start...")

{% for key, value in groupbys.items() %}
{{ value-}}
{% endfor %}

{% for key, value in exprs_dst.items() %}
# {{ key }} = {{ value-}}
{% endfor %}
{% for key, value in exprs_src.items() %}
# {{ key }} = {{ value-}}
{% endfor %}

# drop intermediate columns
df = df.drop(columns=filter(lambda x: re.search(r'^x_\d+', x), df.columns))

# shrink
df = df.select(cs.all().shrink_dtype())
df = df.shrink_to_fit()

logger.info('done')

# save
# df.write_parquet('output.parquet', compression='zstd')

print(df.tail(5))
