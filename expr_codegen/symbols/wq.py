# this code is auto generated by the tools/codegen_symbols.py
from sympy import symbols, Function

# polars_ta.wq.arithmetic
abs_, add, arc_cos, arc_sin, arc_tan, ceiling, cos, cosh, densify, divide, exp, floor, fraction, inverse, log, log10, log1p, max_, mean, min_, mod, multiply, power, purify, reverse, round_, round_down, s_log_1p, sign, signed_power, sin, sinh, sqrt, subtract, tan, tanh, truncate = symbols('abs_, add, arc_cos, arc_sin, arc_tan, ceiling, cos, cosh, densify, divide, exp, floor, fraction, inverse, log, log10, log1p, max_, mean, min_, mod, multiply, power, purify, reverse, round_, round_down, s_log_1p, sign, signed_power, sin, sinh, sqrt, subtract, tan, tanh, truncate', cls=Function)
# polars_ta.wq.cross_sectional
cs_normalize, cs_one_side, cs_rank, cs_scale, cs_scale_down, cs_truncate, cs_winsorize, cs_zscore = symbols('cs_normalize, cs_one_side, cs_rank, cs_scale, cs_scale_down, cs_truncate, cs_winsorize, cs_zscore', cls=Function)
# polars_ta.wq.logical
and_, equal, if_else, is_finite, is_nan, is_not_finite, is_not_nan, less, negate, or_ = symbols('and_, equal, if_else, is_finite, is_nan, is_not_finite, is_not_nan, less, negate, or_', cls=Function)
# polars_ta.wq.preprocess
neutralize_demean, neutralize_residual_multiple, neutralize_residual_simple, standardize_minmax, standardize_zscore, winsorize_3sigma, winsorize_mad, winsorize_quantile = symbols('neutralize_demean, neutralize_residual_multiple, neutralize_residual_simple, standardize_minmax, standardize_zscore, winsorize_3sigma, winsorize_mad, winsorize_quantile', cls=Function)
# polars_ta.wq.time_series
ts_arg_max, ts_arg_min, ts_co_kurtosis, ts_co_skewness, ts_corr, ts_count, ts_count_nans, ts_covariance, ts_decay_exp_window, ts_decay_linear, ts_delay, ts_delta, ts_ir, ts_kurtosis, ts_log_diff, ts_max, ts_max_diff, ts_mean, ts_median, ts_min, ts_min_diff, ts_min_max_cps, ts_min_max_diff, ts_moment, ts_partial_corr, ts_percentage, ts_product, ts_rank, ts_returns, ts_scale, ts_skewness, ts_std_dev, ts_sum, ts_triple_corr, ts_weighted_delay, ts_zscore = symbols('ts_arg_max, ts_arg_min, ts_co_kurtosis, ts_co_skewness, ts_corr, ts_count, ts_count_nans, ts_covariance, ts_decay_exp_window, ts_decay_linear, ts_delay, ts_delta, ts_ir, ts_kurtosis, ts_log_diff, ts_max, ts_max_diff, ts_mean, ts_median, ts_min, ts_min_diff, ts_min_max_cps, ts_min_max_diff, ts_moment, ts_partial_corr, ts_percentage, ts_product, ts_rank, ts_returns, ts_scale, ts_skewness, ts_std_dev, ts_sum, ts_triple_corr, ts_weighted_delay, ts_zscore', cls=Function)
# polars_ta.wq.transformational
bucket, clamp, filter_, keep, left_tail, pasteurize, right_tail, sigmoid, tail = symbols('bucket, clamp, filter_, keep, left_tail, pasteurize, right_tail, sigmoid, tail', cls=Function)
